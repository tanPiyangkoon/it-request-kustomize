# Example: Using External Secrets Operator (ESO)
# ใช้สำหรับดึง secrets จาก external secret managers

apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: it-request-secret
  namespace: default
spec:
  # รีเฟรชทุก 1 ชั่วโมง
  refreshInterval: 1h

  # เลือก SecretStore (ตั้งค่าตาม secret manager ที่ใช้)
  secretStoreRef:
    name: aws-secretsmanager  # หรือ vault-backend, gcpsm-secret-store
    kind: SecretStore

  # กำหนด Secret ที่จะสร้าง
  target:
    name: it-request-secret
    creationPolicy: Owner

  # ดึงค่าจาก Secret Manager
  data:
  - secretKey: PGUSER
    remoteRef:
      key: production/it-request/db  # path ใน Secret Manager
      property: username

  - secretKey: PGPASSWORD
    remoteRef:
      key: production/it-request/db
      property: password

  - secretKey: DB_USER
    remoteRef:
      key: production/it-request/db
      property: username

  - secretKey: DB_PASSWORD
    remoteRef:
      key: production/it-request/db
      property: password

---
# หรือใช้ Sealed Secrets (encrypt ด้วย public key ของ cluster)
# ติดตั้ง: kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.24.0/controller.yaml

apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  name: it-request-secret
  namespace: default
spec:
  encryptedData:
    PGUSER: AgBxxx...  # ใช้ kubeseal ในการ encrypt
    PGPASSWORD: AgByyy...
    DB_USER: AgBzzz...
    DB_PASSWORD: AgBaaa...
  template:
    metadata:
      name: it-request-secret
      namespace: default
    type: Opaque
